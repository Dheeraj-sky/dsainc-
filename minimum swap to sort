// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends


class Solution 
{
    public:
    //Function to find the minimum number of swaps required to sort the array. 
	int minSwaps(vector<int>&arr)
	{
	   int n=arr.size();
	   vector<int>temp;
	   int count=0;
	   unordered_map<int,int>mp;
	   for(int i=0;i<n;i++)
	   {
	       temp.push_back(arr[i]);
	       mp[arr[i]]=i;
	   }
	   sort(temp.begin(),temp.end());
	   for(int i=0;i<n;i++)
	   {
	       if(arr[i]!=temp[i])
	       {
	           count++;
	           int t=arr[i];
	           int p=mp[temp[i]];
	       
	       swap(arr[i],arr[mp[temp[i]]]);
	       mp[temp[i]]=i;
	       mp[t]=p;
	       }
	   }
	   return count;
	}
};

// { Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int n;
		cin >> n;
		vector<int>nums(n);
		for(int i = 0; i < n; i++)
			cin >> nums[i];
		Solution obj;
		int ans = obj.minSwaps(nums);
		cout << ans <<"\n";
	}
	return 0;
}  // } Driver Code Ends
